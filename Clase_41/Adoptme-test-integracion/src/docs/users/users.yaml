paths:
  /api/users/:
    get:
      summary: Ruta para obtener todos los usuarios
      tags:
        - Usuarios
      responses:
        "200":
          description: Los usuarios se obtuvieron correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/User'
        "500":
          description: Error interno del servidor
  /api/users/{uid}:
    get:
      summary: Obtener un usuario por id
      tags:
        - Usuarios
      parameters:
        - name: uid
          in: path
          required: true
          description: id del usuario que se desea solicitar
          schema:
            $type: string
      responses:
        "200":
          description: Usuario obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#components/schemas/User'
        "500":
          description: Error del servidor
    put:
      summary: Actualizar un usuario a partir de su id
      tags:
        - Usuarios
      parameters:
        - name: uid
          in: path
          required: true
          description: id del usuario que se desea actualizar
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/UpdateUser'
      responses:
        "200":
          description: Usuario actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#components/schemas/SuccessUpdate'
        "500":
          description: Error del servidor

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: id unico autogenerado por la base de datos
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo del usuario
        password:
          type: string
          description: Contraseña encriptada del usuario
        role:
          type: string
          description: Role del usuario
        pets:
          type: array
          description: Mascotas adoptadas por el usuario
      example:
        _id: ObjectId("jhgasd987123kja")
        first_name: Pepe
        last_name: Perez
        email: pepe@gmail.com
        password: $aksjhd981273kjashd912
        role: user
        pets: ["kjahsd981273as"]
    SuccessUpdate:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      example:
        status: success
        message: user updated
  requestBodies:
    UpdateUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo del usuario
        password:
          type: string
          description: Contraseña en texto plano del usuario
      example:
        first_name: Laura
        last_name: Morales
        email: laura@gmail.com
        password: coderPass
